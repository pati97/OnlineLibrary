@model PagedList.IPagedList<OnlineLibrary.Models.Book>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "The Book List - metatitle to 60 characters";
    ViewBag.Description = "The Books that are available on our website - metadescription to 160 characters";
    ViewBag.KeyWords = "Book, Ebook, Category, Free book, download, upload, title, author, application";
}

<h2 style="text-align:center">List of books</h2>

@if (User.Identity.IsAuthenticated)
{
    <p>
        @Html.ActionLink("Add New Book", "Create", null, new { @class = "btn btn-success" })
    </p>
}
<br />
@using (Html.BeginForm())
{
    <p>
        Search: @Html.TextBox("searchData", ViewBag.FilterValue as string)
        <input type="submit" value="Find" />
    </p>
}
<br />
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSort}, new { @class ="color-class"})
        </th>
        <th>
            @Html.ActionLink("Author", "Index", new { sortOrder = ViewBag.AuthorSort }, new { @class = "color-class" })
        </th>
        <th>
            @Html.ActionLink("Description", "Index", new { sortOrder = ViewBag.DescriptionSort }, new { @class = "color-class" })
        </th>
        <th>
            @Html.ActionLink("YearOfPublication", "Index", new { sortOrder = ViewBag.YearSort }, new { @class = "color-class" })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearOfPublication)
            </td>
            
            <td>
                @Html.ActionLink("Download", "Download", new { id = item.ID }, new { @class = "btn btn-success" })
                <br />
                @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "btn btn-warning" })
                <br />
                @Html.ActionLink("Reviews", "Index", "Comments", new { id = item.ID }, new { @class = "btn btn-info"})

                
              
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <br />
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn btn-primary" })
                    <br />
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn btn-danger" })
                }

            </td>
        </tr>
    }
</table>

<div>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) with @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, FilterValue = ViewBag.FilterValue }))
</div>
